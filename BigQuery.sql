-- Channels which used most--
SELECT * FROM (SELECT transaction_id, cust_id, count(cust_id) as Count
FROM `trans123.Transactions`
GROUP BY transaction_id, cust_id
Having Count(cust_id) > 1
Order BY count(cust_id) DESC )
ORDER BY Count DESC
limit 5;

--Count of males and Females--

Select * FROM (SELECT COUNT(Gender) as Gender_Count, Gender FROM `trans123.Customers` GROUP BY Gender) AS GenCount
PIVOT
(SUM (Gender_Count) FOR Gender IN ('F','M') ) AS PIVOTGender;

--Which City Has the maximum number of Customers--

SELECT COUNT(*) as Row_Count, city_code FROM `trans123.Customers`
GROUP BY city_code
ORDER BY city_code DESC
limit 1 ;

--How many subcategories do we have under book category--

SELECT prod_subcat FROM `trans123.Product Category`
WHERE prod_cat = 'Books';

--What is the maximum quantity of products ever ordered?--

SELECT P.prod_cat, MAX(Qty) as Max_Quantity FROM `trans123.Transactions` T
JOIN `trans123.Product Category` P
ON P.prod_cat_code = T.prod_cat_code
GROUP BY P.prod_cat;

--Net Total Revenue Generated in Books and Electronics--

WITH CTERevenue AS (SELECT P.prod_cat As ProdCat, T.total_amt AS TotalAMT FROM `trans123.Product Category` P
JOIN `trans123.Transactions` T
ON T.prod_cat_code = P.prod_cat_code
WHERE P.prod_cat = "Books" OR P.prod_Cat = "Electronics")

SELECT COALESCE (CTERevenue.ProdCat, "Total Revenue") as ProdCategory, SUM(CTERevenue.TotalAMT) Total_Amount
FROM CTERevenue
GROUP BY ROLLUP (CTERevenue.ProdCat);

--How many customers have more than 10 transactions excluding returns--

WITH CustCTE AS (SELECT COUNT(transaction_id) as Transaction_Counts, cust_id, Qty FROM `trans123.Transactions`
GROUP BY cust_id, Qty
HAVING Qty > 0
ORDER BY COUNT(transaction_id) DESC)

SELECT CustCTE.cust_id FROM CustCTE
WHERE CustCTE.Transaction_Counts > 10 ;


--What is the combined Revenue generated from Clothing and Electronics category from flagship store--

WITH FlagshipCTE AS ( SELECT P.prod_cat AS ProdCat, T.total_amt AS TotalAmt FROM `trans123.Product Category` AS P
JOIN `trans123.Transactions` AS T
On T.prod_cat_code = P.prod_cat_code
WHERE P.prod_cat = "Clothing" OR P.prod_cat = "Electronics" AND T.Store_type = "Flagship store")

SELECT COALESCE(FlagshipCTE.ProdCat, "Total Revenue Generated By Clothing + Electronics") As Flagship_Category, 
SUM(FlagshipCTE.TotalAmt) AS Revenue
FROM FlagshipCTE
GROUP BY ROLLUP (FlagshipCTE.ProdCat)
ORDER BY SUM(FlagshipCTE.TotalAmt) DESC
LIMIT 1;

--What is the total revenue generated from male customers in electronic subcategory?--

SELECT C.Gender, P.prod_cat, P.prod_subcat, SUM(T.total_amt) as TotalRev FROM `trans123.Customers` AS C
JOIN `trans123.Transactions` AS T
ON C.customer_Id = T.cust_id
JOIN `trans123.Product Category` AS P
ON  T.prod_cat_code = P.prod_cat_code
GROUP BY C.Gender, P.prod_Cat, P.prod_subcat
HAVING Gender = "M" AND P.prod_cat = "Electronics";


--What is the percentage of Sales and returns by product subcategory (Only show the top5 sub cats in terms of sales)--
WITH SalesCTE AS (
  SELECT ROUND(SUM(T.total_amt), 3) AS SalesTotal, P.prod_subcat as SalesProducts, T.Qty FROM `trans123.Transactions` T
  JOIN `trans123.Product Category` AS P
  ON T.prod_cat_code = P.prod_cat_code
  GROUP BY P.prod_subcat, T.Qty
  HAVING T.Qty > 0
),

ReturnsCTE AS(
SELECT ROUND(SUM(T.total_amt), 3) AS ReturnsTotal, P.prod_subcat AS ReturnProducts, T.Qty FROM `trans123.Transactions` T
  JOIN `trans123.Product Category` AS P
  ON T.prod_cat_code = P.prod_cat_code
  GROUP BY P.prod_subcat, T.Qty
  HAVING T.Qty < 0
),
TotalSumCTE AS (
SELECT SUM(total_amt) as TotalAmt FROM `trans123.Transactions`)

SELECT SalesCTE.SalesProducts, (SUM(SalesCTE.SalesTotal)/SUM(SalesCTE.SalesTotal + ABS (ReturnsCTE.ReturnsTotal)))*100 As SalesPercent, 
SUM(ReturnsCTE.ReturnsTotal)/SUM(SalesCTE.SalesTotal + ABS (ReturnsCTE.ReturnsTotal))*100 AS ReturnPercent
FROM TotalSumCTE, SalesCTE, ReturnsCTE
GROUP BY SalesCTE.SalesProducts
ORDER BY (SUM(SalesCTE.SalesTotal)/SUM(SalesCTE.SalesTotal + ABS (ReturnsCTE.ReturnsTotal)))*100 DESC
LIMIT 5;

-- For all customers aged between 25 to 35 years, find what is the net total revenue generated by these consumers in last 30 days of transaction
-- from max transactions date available in the data


WITH AgeCTE AS (
  SELECT T.cust_id As CustID, DATE_DIFF(PARSE_DATE('%d-%m-%Y', REPLACE(MAX(T.tran_date), '/', '-')),C.DOB, YEAR) AS AGE,
  PARSE_DATE('%d-%m-%Y', REPLACE(MAX(T.tran_date), '/', '-')) AS TranDate, SUM(T.total_amt) AS TotalAmt FROM `trans123.Transactions` T
  JOIN `trans123.Customers` C
ON C.customer_Id = T.cust_id
GROUP BY C.DOB, T.cust_id)

SELECT SUM(REVENUE) AS REV_BTW_25_35 FROM (SELECT CustID, AGE, AgeCTE.TranDate , SUM(AgeCTE.TotalAmt) AS REVENUE FROM AgeCTE
GROUP BY CustID,AGE,  AgeCTE.TranDate
HAVING AGE BETWEEN 25 AND 35 AND AgeCTE.TranDate >= DATE_SUB((SELECT MAX(TranDate) FROM AgeCTE), INTERVAL 30 DAY));


-- Which product category has seen the most returns in the last three months of transaction
WITH DATECTE AS (SELECT MAX(PARSE_DATE('%d-%m-%Y', REPLACE(tran_date, '/', '-'))) AS MAXDATE from `trans123.Transactions` ),

RetProdCTE AS (SELECT P.prod_cat as Products, PARSE_DATE('%d-%m-%Y', REPLACE(T.tran_date, '/','-')) AS TranDate, T.Qty AS QTY FROM `trans123.Product Category` P
JOIN `trans123.Transactions` T
ON T.prod_cat_code = P.prod_cat_code
WHERE T.Qty <0 AND PARSE_DATE('%d-%m-%Y', REPLACE(T.tran_date, '/','-')) >= DATE_SUB((SELECT MAXDATE FROM DATECTE), INTERVAL 3 MONTH))

SELECT Products, ABS(SUM(QTY)) as QuantityRet FROM RetProdCTE
GROUP BY RetProdCTE.Products
ORDER BY ABS(SUM(QTY)) DESC;


-- Which store type sells the maximum products by value of sales amount and by quantity?

SELECT * FROM (SELECT Qty , total_amt , Store_type FROM `trans123.Transactions`)
PIVOT
(SUM(Qty) AS Quantity, SUM(total_amt)AS Revenue FOR Store_type IN ('e-Shop', 'Flagship store', 'MBR', 'TeleShop') );

-- What are the categories for which average revenue is above overall average

WITH AvgCTE AS (SELECT AVG(T.total_amt) As TotalAvg, P.prod_cat AS Products FROM `trans123.Transactions` T
JOIN `trans123.Product Category` P
ON P.prod_cat_code = T.prod_cat_code
GROUP BY P.prod_cat),

OverallAvgCTE AS (SELECT AVG(total_amt) AS OverallAVG FROM `trans123.Transactions`)

SELECT AvgCTE.Products, AvgCTE.TotalAvg, AVG(OverallAvgCTE.OverallAVG) OVER(PARTITION BY AvgCTE.Products) AS overallAvg FROM AvgCTE, OverallAvgCTE
WHERE AvgCTE.TotalAvg > OverallAvgCTE.OverallAVG ; 

-- Find the average and total revenue by each subcategory which are among top categories in terms of quantity sold

SELECT Sub_Categories, AVG(Average), SUM(Revenue) FROM (SELECT P.prod_subcat as Sub_Categories, AVG(T.total_amt) as Average, SUM(T.total_amt) AS Revenue, T.Qty As Quantity FROM `trans123.Transactions` T
JOIN `trans123.Product Category` P
ON T.prod_cat_code = P.prod_cat_code
GROUP BY P.prod_subcat, T.Qty
HAVING T.Qty > 0
ORDER BY T.QTY DESC)
GROUP BY Sub_Categories
